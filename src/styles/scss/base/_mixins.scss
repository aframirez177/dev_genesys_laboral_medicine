@mixin respond-to($breakpoint) {
    $value: map-get($breakpoints, $breakpoint);

    @if $value != null {
        @media screen and (min-width: $value) {
        @content;
        }
    } @else {
        @warn "Unknown breakpoint: #{$breakpoint}.";
    }
}

@mixin hide-scrollbar {
    scrollbar-width: none;
    -ms-overflow-style: none;
    &::-webkit-scrollbar {
        display: none;
    }
}

@mixin flex-column {
        display: flex;
        flex-direction: column;
    }
    
    @mixin flex-between {
        display: flex;
        justify-content: space-between;
        align-items: center;
    }
    
    @mixin flex-center {
        display: flex;
        justify-content: center;
        align-items: center;
    }


    @mixin button() {
            display: inline-block;
            padding: 12px 24px;
            border: none;
            border-radius: 20px;
            cursor: pointer;
            font-size: 1.8rem;
            transition: background-color 0.3s ease;
            &:hover {
            background-color: darken(map-get($colors, 'primary'), 10%);
            }
        }

    @mixin button-small() {
            display: inline-block;
            padding: 1px 6px; // Tamaño más pequeño que el botón regular
            border: none;
            border-radius: 25px;
            cursor: pointer;
            font-size: 1.6rem; // Tamaño de fuente más pequeño
            font-weight: 800;
            transition: background-color 0.3s ease;
            color: map-get($colors, 'secondary' );
            box-shadow:  0 2px 5px rgba(0, 0, 0, 0.3);
            width: 3rem;
            height: 3rem;
        
            &:hover {
                background-color: darken(map-get($colors, 'primary'), 10%);
            }
        }
        
        @mixin smooth-weight-transition($duration: 0.3s) {
            transition: opacity $duration ease;
        }
